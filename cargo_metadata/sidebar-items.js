initSidebarItems({"enum":[["CargoOpt","Cargo features flags"],["DependencyKind","Dependencies can come in three kinds"],["ErrorKind","The kind of an error."],["Message","A cargo message"]],"fn":[["parse_messages","Creates an iterator of Message from a Read outputting a stream of JSON messages. For usage information, look at the top-level documentation."]],"struct":[["Artifact","A compiler-generated file."],["ArtifactProfile","Profile settings used to determine which compiler flags to use for a target."],["BuildScript","Output of a build script execution."],["CompilerMessage","Message left by the compiler"],["Dependency","A dependency of the main crate"],["Error","The Error type."],["Metadata","Starting point for metadata returned by `cargo metadata`"],["MetadataCommand","A builder for configurating `cargo metadata` invocation."],["Node","A node in a dependencies graph"],["NodeDep","A dependency in a node"],["Package","A crate"],["PackageId","An \"opaque\" identifier for a package. It is possible to inspect the `repr` field, if the need arises, but its precise format is an implementation detail and is subject to change."],["Resolve","A dependency graph"],["Source","The source of a package such as crates.io."],["Target","A single target (lib, bin, example, ...) provided by a crate"]],"type":[["Result","Convenient wrapper around `std::Result`."]]});