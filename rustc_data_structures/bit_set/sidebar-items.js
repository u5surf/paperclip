initSidebarItems({"constant":[["WORD_BITS",""],["WORD_BYTES",""]],"enum":[["HybridBitSet","A fixed-size bitset type with a hybrid representation: sparse when there are up to a `SPARSE_MAX` elements in the set, but dense when there are more than `SPARSE_MAX`."],["HybridIter",""]],"struct":[["BitIter",""],["BitMatrix","A fixed-size 2D bit matrix type with a dense representation."],["BitSet","A fixed-size bitset type with a dense representation. It does not support resizing after creation; use `GrowableBitSet` for that."],["GrowableBitSet","A resizable bitset type with a dense representation."],["SparseBitMatrix","A fixed-column-size, variable-row-size 2D bit matrix with a moderately sparse representation."],["SparseBitSet","A fixed-size bitset type with a sparse representation and a maximum of `SPARSE_MAX` elements. The elements are stored as a sorted `SmallVec` with no duplicates; although `SmallVec` can spill its elements to the heap, that never happens within this type because of the `SPARSE_MAX` limit."]],"trait":[["BitSetOperator",""],["SubtractFromBitSet","This is implemented by all the bitsets so that BitSet::subtract() can be passed any type of bitset."],["UnionIntoBitSet","This is implemented by all the bitsets so that BitSet::union() can be passed any type of bitset."]],"type":[["Word",""]]});