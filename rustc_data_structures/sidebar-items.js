initSidebarItems({"fn":[["cold_path",""]],"macro":[["box_region_allow_access",""],["const_cstr","This macro creates a zero-overhead &CStr by adding a NUL terminator to the string literal passed into it at compile-time. Use it like:"],["declare_box_region_type",""],["impl_stable_hash_via_hash",""],["likely",""],["newtype_index","Creates a struct type `S` that can be used as an index with `IndexVec` and so on."],["parallel",""],["rustc_erase_owner",""],["static_assert","A simple static assertion macro. The first argument should be a unique ALL_CAPS identifier that describes the condition."],["unlikely",""]],"mod":[["base_n",""],["bit_set",""],["box_region",""],["const_cstr",""],["fingerprint",""],["flock","Simple file-locking apis for each OS."],["fx",""],["graph",""],["indexed_vec",""],["interner",""],["jobserver",""],["macros",""],["obligation_forest","The `ObligationForest` is a utility data structure used in trait matching to track the set of outstanding obligations (those not yet resolved to success or error). It also tracks the \"backtrace\" of each pending obligation (why we are trying to figure this out in the first place)."],["owning_ref","An owning reference."],["ptr_key",""],["sip128","This is a copy of `core::hash::sip` adapted to providing 128 bit hashes."],["small_c_str",""],["snapshot_map",""],["snapshot_vec","A utility class for implementing \"snapshottable\" things; a snapshottable data structure permits you to take a snapshot (via `start_snapshot`) and then, after making some changes, elect either to rollback to the start of the snapshot or commit those changes."],["sorted_map",""],["stable_hasher",""],["svh","Calculation and management of a Strict Version Hash for crates"],["sync","This module defines types which are thread safe if cfg!(parallel_compiler) is true."],["thin_vec",""],["tiny_list","A singly-linked list."],["transitive_relation",""],["unify","Union-find implementation. The main type is `UnificationTable`."],["vec_linked_list",""],["work_queue",""]],"struct":[["OnDrop",""]],"trait":[["ToHex","A trait for converting a value to hexadecimal encoding"]]});